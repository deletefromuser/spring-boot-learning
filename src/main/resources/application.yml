spring:
  redis:
    cluster:
      nodes: 127.0.0.1:6481,127.0.0.1:6482,127.0.0.1:6483,127.0.0.1:6484,127.0.0.1:6485,127.0.0.1:6486
  
  datasource:
    url: jdbc:mariadb://localhost:3306/ut2
    driverClassName: org.mariadb.jdbc.Driver
    username: user
    password: '123'
    tomcat:
      init-s-q-l: SET NAMES 'utf8mb4'

  # https://stackoverflow.com/a/58299451/19120213
  # autoconfigure:
  #   exclude: 
  #     - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  #     - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
 
  security:
    user:
      name: user
      password: '123'
    oauth2:
      client:
        provider:
          github:
            # let authentication.getName() return github username(attributes.login) rather than id
            # https://docs.spring.io/spring-security/reference/servlet/oauth2/login/advanced.html
            userNameAttribute: login

  # artemis:
  #   mode: native
  #   broker-url: "tcp://localhost:61616"
  #   user: "admin"
  #   password: "admin"

  # jms:
  #   template:
  #     default-destination: tacocloud.order.queue

  rabbitmq:
    # host: "localhost"
    # port: 5672
    # username: "admin"
    # password: "secret"
    template:
      exchange: example.boot.todos
      routing-key: handler.todo

  kafka:
  #  bootstrap-servers:
  #    - kafka.tacocloud.com:909
  #    - kafka.tacocloud.com:9093
  #    - kafka.tacocloud.com:909
    template:
      default-topic: topic.todo
    producer:
      properties:
        "[value.serializer]": org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      properties:
        "[value.deserializer]": org.springframework.kafka.support.serializer.JsonDeserializer
        # "[groud-id]": "test"
        # https://stackoverflow.com/a/61963869/19120213
        # "[spring.json.trusted.packages]": "java.util, java.lang, com.example.springboot.model.Todo"
        "[spring.json.trusted.packages]": "*"

  messages:
    # default basename: messages
    basename: i18n.messages

  profiles:
    active: @activatedProperties@

server:
  port: 8080
  servlet:
    context-path: /boot

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: info, health, httptrace, configprops, beans, auditevents

  endpoint:
    info:
      enabled: true
    health:
      enabled: true
      # https://docs.spring.io/spring-boot/docs/2.1.1.RELEASE/reference/html/production-ready-endpoints.html#production-ready-health
      show-details: when-authorized
    configprops:
      enabled: true
    beans:
      enabled: true
    httptrace:
      enabled: true
    auditevents:
      enabled: true
  # https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.2.0-M3-Release-Notes#actuator-http-trace-and-auditing-are-disabled-by-default
  trace:
    http:
      enabled: true

  # https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#actuator.endpoints.info.auto-configured-info-contributors
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

info:
  app:
    encoding: UTF-8
    java:
      source: '11'
      target: '@java.version@'

product:
  name: hello\nworld
  desc: 'hello\nworld'
  details: "hello\nworld"

# https://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/
mybatis:
  mapper-locations: classpath:com/example/springboot/dao/mapper/*.xml
  type-aliases-package: com.example.springboot.dao.model
  type-handlers-package: com.example.springboot.dao.mapper
  # configuration:
  #   map-underscore-to-camel-case: true
  #   default-fetch-size: 100
  #   default-statement-timeout: 30

---
# https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/html/howto-properties-and-configuration.html#howto-change-configuration-depending-on-the-environment
spring:
  config:
    activate:
      on-profile: dev

server:
  # port: 8000
  # https://www.tutorialspoint.com/spring_boot/spring_boot_enabling_https.htm
  port: 8443
  ssl:
      key-store: scripts/keystore.p12
      key-store-password: springboot
      keyStoreType: PKCS12
      keyAlias: tomcat
  servlet:
    context-path: /boot-dev

# https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging.file-output
logging:
  file: 
  # https://stackoverflow.com/a/61372261/19120213
    path: "${user.home}/logs/"
    # name: boot-app.log
  pattern:
    file: '%d{yyyy-MM-dd hh:mm:ss} [%thread] %X{requestId} %-5level %logger{50} - %msg%n'
    # https://stackoverflow.com/a/42208638/19120213
    # from spring-boot-XXX.RELEASE.jar/org/springframework/boot/logging/logback/defaults.xml
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %X{requestId} %clr(-%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    root: info
    # org:
    #   springframework: DEBUG
    com.example.springboot.dao.mapper: debug
    org.springframework.amqp.rabbit: debug

---
spring:
  config:
    activate:
      on-profile: prod

server:
  port: 8001
  servlet:
    context-path: /boot-prod

asako:
  id: 3
  name: asako
---
